using GalaSoft.MvvmLight.Ioc;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using TriggerPoint.Model;

namespace TriggerPoint.Views
{
    /// <summary>
    /// Interaction logic for RSIDialog.xaml
    /// </summary>
    public partial class RSIDialog : UserControl
    {
        public RSIDialog()
        {
            InitializeComponent();
        }

        private void DataGrid_AutoGeneratingColumn(object sender, DataGridAutoGeneratingColumnEventArgs e)
        {
            if (e.PropertyName == "DateTime")
                (e.Column as DataGridTextColumn).Binding.StringFormat = "dd/MM/yyyy H:mm:ss";
            if (e.PropertyName == "Date")
                (e.Column as DataGridTextColumn).Binding.StringFormat = "d";
            if (e.PropertyName == "Time")
                (e.Column as DataGridTextColumn).Binding.StringFormat = "t";


        }

        private void DataGrid_AutoGeneratedColumns(object sender, EventArgs e)
        {
            var dg = sender as DataGrid;

            var vm = SimpleIoc.Default.GetInstance<ViewModel.IndicatorDataViewModel>();

            if (vm.IndicatorData.ActiveProfiles.ContainsKey(IndicatorEnum.RSI) && vm.IndicatorData.ActiveProfiles[IndicatorEnum.RSI] != null)
            {
                var profile = vm.IndicatorData.ActiveProfiles[IndicatorEnum.RSI];

                if (dg != null)
                {
                    dg.FontFamily = new System.Windows.Media.FontFamily(profile.font.FontValue.FontFamily.Name);
                    dg.FontSize = profile.font.FontValue.Size;
                    dg.FontStyle = profile.font.FontValue.Style == System.Drawing.FontStyle.Italic ? FontStyles.Italic : FontStyles.Normal;
                    dg.FontWeight = profile.font.FontValue.Style == System.Drawing.FontStyle.Bold ? FontWeights.Bold : FontWeights.Normal;
                }

                var avg = profile.ColumnList.ToList();
                foreach (var item in dg.Columns)
                {
                    if (avg.Contains(item.Header.ToString()))
                    {
                        item.DisplayIndex = avg.IndexOf(item.Header.ToString());
                    }
                    else
                    {
                        item.Visibility = System.Windows.Visibility.Collapsed;
                    }
                }
            }
        }
    }
}
